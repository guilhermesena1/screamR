// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// ColSums
NumericVector ColSums(Eigen::SparseMatrix<double> m);
RcppExport SEXP _screamr_ColSums(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(ColSums(m));
    return rcpp_result_gen;
END_RCPP
}
// RowSums
NumericVector RowSums(Eigen::SparseMatrix<double> m);
RcppExport SEXP _screamr_RowSums(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(RowSums(m));
    return rcpp_result_gen;
END_RCPP
}
// ColVars
NumericVector ColVars(Eigen::SparseMatrix<double> m);
RcppExport SEXP _screamr_ColVars(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(ColVars(m));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_screamr_ColSums", (DL_FUNC) &_screamr_ColSums, 1},
    {"_screamr_RowSums", (DL_FUNC) &_screamr_RowSums, 1},
    {"_screamr_ColVars", (DL_FUNC) &_screamr_ColVars, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_screamr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
